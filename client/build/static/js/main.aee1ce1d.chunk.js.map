{"version":3,"sources":["components/navigation/Navbar.js","components/screens/Home.js","components/userRegistration/Login.js","functions/UserFunctions.js","components/clownRegistration/Register.js","functions/ClownFunctions.js","components/clownRegistration/Login.js","components/userRegistration/Register.js","functions/AuthFunctions.js","components/screens/Profile.js","components/navigation/ScreenNav.js","components/screens/Videos.js","components/screens/VideoChat.js","components/screens/Clowns.js","functions/Functions.js","components/screens/SingleClown.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","e","preventDefault","localStorage","removeItem","this","props","history","push","loginRegLink","react_default","a","createElement","className","Link","to","userLink","href","onClick","logOut","bind","token","Component","withRouter","Home","components_navigation_Navbar","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","email","password","onChange","assertThisInitialized","onSubmit","setState","defineProperty","target","name","value","_this2","user","axios","post","then","res","setItem","data","catch","err","console","log","login","noValidate","htmlFor","type","placeholder","Register","nickname","first_name","last_name","newClown","firstName","lastName","clown","newUser","requireAuth","getItem","jwt_decode","Profile","id","auth","ScreenNav","goBack","Videos","youTubeVideos","youTubeVideosUrl","fetch","resp","json","items","videoUrls","forEach","video","videoId","url","listVideos","map","videoUrl","key","width","height","src","frameBorder","allow","allowFullScreen","components_navigation_ScreenNav","VideoChat","io","openSocket","connection","RTCPeerConnection","iceServers","otherUsername","socket","on","emit","my","required","autoFocus","autoPlay","Clowns","clowns","get","listClowns","window","location","origin","image","alt","imageUrl","clownId","match","params","App","BrowserRouter","Route","exact","path","component","SingleClown","ClownLogin","ClownRegister","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aee1ce1d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport './Navbar.css'\n\nclass Navbar extends Component {\n    logOut(e) {\n        e.preventDefault()\n        localStorage.removeItem('token')\n        this.props.history.push(`/`)\n    }\n\n    render() {\n        const loginRegLink = (\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\">\n                        Home\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/login\" className=\"nav-link\">\n                        Login\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/register\" className=\"nav-link\">\n                        Register\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/clowns\" className=\"nav-link\">\n                        Clowns\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/videos\" className=\"nav-link\">\n                        Videos\n                    </Link>\n                </li>\n            </ul>\n        )\n        const userLink = (\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\">\n                        Home\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/profile\" className=\"nav-link\">\n                        User\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/videochat\" className=\"nav-link\">\n                        Video Chat\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <a href=\"#\" onClick={this.logOut.bind(this)} className=\"nav-link\">\n                        Logout\n                    </a>\n                </li>\n            </ul>\n        )\n\n        return (\n            <nav>    \n                {localStorage.token ? userLink : loginRegLink}\n            </nav>\n        )\n    }\n}\n\nexport default withRouter(Navbar)","import React, { Component } from 'react'\nimport Navbar from '../navigation/Navbar'\nimport './Home.css'\n\nclass Home extends Component {\n    render () {\n        return (\n            <div className=\"container\">\n                <Navbar />\n                <div>\n                    <h1 className=\"text-center\">Map</h1>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\nimport { login } from '../../functions/UserFunctions'\nimport './Login.css'\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            email: '',\n            password: ''\n        }\n\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n\n        const user = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        login(user).then(res => {\n            if (res) {\n                this.props.history.push(`/`)\n            }\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email Address</label>\n                                <input type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    placeholder=\"Enter Email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    placeholder=\"Enter Password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <button type=\"submit\">Sign in</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login","import axios from 'axios'\r\n\r\nexport const register = newUser => {\r\n    return axios\r\n        .post('users/register', {\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            email: newUser.email,\r\n            password: newUser.password\r\n        })\r\n        .then(res => {\r\n            console.log(\"Registered\")\r\n        })\r\n}\r\n\r\nexport const login = user => {\r\n    return axios\r\n        .post('users/login', {\r\n            email: user.email,\r\n            password: user.password\r\n        })\r\n        .then(res => {\r\n            localStorage.setItem('token', res.data)\r\n            return res.data\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}","import React, { Component } from 'react'\nimport { register } from '../../functions/ClownFunctions'\n\nclass Register extends Component {\n    constructor() {\n        super()\n        this.state = {\n            nickname: '',\n            first_name: '',\n            last_name: '',\n            email: '',\n            password: ''\n        }\n\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange (e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit (e) {\n        e.preventDefault()\n\n        const user = {\n            nickname: this.state.nickname,\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        register(user).then(res => {\n            this.props.history.push(`/login`)\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"nickname\">Nickname</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"nickname\"\n                                    placeholder=\"Enter Fist Name\"\n                                    value={this.state.nickname}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"first_name\">First Name</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"first_name\"\n                                    placeholder=\"Enter Fist Name\"\n                                    value={this.state.first_name}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"last_name\">Last Name</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"last_name\"\n                                    placeholder=\"Enter Last Name\"\n                                    value={this.state.last_name}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email Address</label>\n                                <input type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    placeholder=\"Enter Email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    placeholder=\"Enter Password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <button type=\"submit\"\n                                className=\"btn btn-lg btn-primary btn-block\">\n                                Register\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Register","import axios from 'axios'\n\nexport const register = newClown => {\n    return axios\n        .post('/clowns/register', {\n            nickname: newClown.nickname,\n            firstName: newClown.firstName,\n            lastName: newClown.lastName,\n            email: newClown.email,\n            password: newClown.password\n        })\n        .then(res => {\n            console.log(\"Registered\")\n        })\n}\n\nexport const login = clown => {\n    return axios\n        .post('/clowns/login', {\n            email: clown.email,\n            password: clown.password\n        })\n        .then(res => {\n            localStorage.setItem('token', res.data)\n            return res.data\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}","import React, { Component } from 'react'\nimport { login } from '../../functions/ClownFunctions'\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            email: '',\n            password: ''\n        }\n\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n\n        const user = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        login(user).then(res => {\n            if (res) {\n                this.props.history.push(`/`)\n            }\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email Address</label>\n                                <input type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    placeholder=\"Enter Email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    placeholder=\"Enter Password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <button type=\"submit\">Sign in</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login","import React, { Component } from 'react'\nimport { register } from '../../functions/UserFunctions'\nimport './Register.css'\n\nclass Register extends Component {\n    constructor() {\n        super()\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: ''\n        }\n\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange (e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit (e) {\n        e.preventDefault()\n\n        const user = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        register(user).then(res => {\n            this.props.history.push(`/login`)\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"firstName\">First Name</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"firstName\"\n                                    placeholder=\"Enter Fist Name\"\n                                    value={this.state.firstName}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"lastName\">Last Name</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"lastName\"\n                                    placeholder=\"Enter Last Name\"\n                                    value={this.state.lastName}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email Address</label>\n                                <input type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    placeholder=\"Enter Email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    placeholder=\"Enter Password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <button type=\"submit\"\n                                className=\"btn btn-lg btn-primary btn-block\">\n                                Register\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Register","import jwt_decode from 'jwt-decode'\n\nexport const requireAuth = () => {\n    if(!localStorage.getItem('token')) {\n        let data = {\n            res: false\n        }\n        return data\n    }\n    let token = localStorage.token\n    let decoded = jwt_decode(token)\n    let data = {\n        res: true,\n        user: decoded\n    }\n    return data\n}","import React, { Component } from 'react'\nimport { requireAuth } from '../../functions/AuthFunctions'\nimport './Agenda.css'\n\nclass Profile extends Component {\n    constructor() {\n        super()\n        this.state = {\n            id: '',\n            nickname: '',\n            firstName: '',\n            lastName: '',\n            email: ''\n        }\n    }\n\n    componentDidMount () {\n        // get data of loggedin user\n        let auth = requireAuth();\n        // if user logged in stay on the page\n        if(auth.res === true) {\n            if(auth.user.type === 'user') {\n                this.setState({\n                    id: auth.user.id,\n                    firstName: auth.user.firstName,\n                    lastName: auth.user.lastName,\n                    email: auth.user.email\n                })\n            } else if(auth.user.type === 'clown') {\n                this.setState({\n                    id: auth.user.id,\n                    nickname: auth.user.nickname,\n                    firstName: auth.user.firstName,\n                    lastName: auth.user.lastName,\n                    email: auth.user.email\n                })\n            }\n        } else {\n            this.props.history.push(`/login`)\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                    <div className=\"col-sm-8 mx-auto\">\n                        <h1 className=\"text-center\">PROFILE</h1>\n                    </div>\n                    <table className=\"table col-md-6 mx-auto\">\n                        <tbody>\n                            <tr>\n                                <td>Id</td>\n                                <td>{this.state.id}</td>\n                            </tr>\n                            <tr>\n                                <td>First Name</td>\n                                <td>{this.state.firstName}</td>\n                            </tr>\n                            <tr>\n                                <td>Last Name</td>\n                                <td>{this.state.lastName}</td>\n                            </tr>\n                            <tr>\n                                <td>Email</td>\n                                <td>{this.state.email}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport './ScreenNav.css'\n\nclass ScreenNav extends Component {\n    constructor() {\n        super()\n        this.state = {\n\n        }\n\n    }\n\n    onClick = e => {\n        e.preventDefault();\n        this.props.history.goBack();\n    };\n\n    render() {\n        return (\n            <nav>\n                <a href=\"#\" onClick={this.onClick}>Terug</a>\n            </nav>\n        )\n    }\n}\n\nexport default withRouter(ScreenNav)","import React, { Component } from 'react'\nimport ScreenNav from '../navigation/ScreenNav'\nimport axios from 'axios'\nimport './Videos.css'\n\nclass Videos extends Component {\n    constructor() {\n        super()\n        this.state = {\n            youTubeVideos: [],\n            youTubeVideosUrl: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://www.googleapis.com/youtube/v3/search?key=AIzaSyAxljpEKy0-vwjWrGJEYcOsohzfBDPe8wE&channelId=UCbcMVpCRxwcqaT1wiWM_ocg&part=snippet,id&order=date&maxResults=20')\n            .then(resp => resp.json())\n            .then((resp) => {\n                this.setState({\n                    youTubeVideos: resp.items\n                });\n                let videoUrls = [];\n                this.state.youTubeVideos.forEach(video => {\n                    if(video.id.videoId) {\n                        let url = \"https://www.youtube.com/embed/\" + video.id.videoId;\n                        videoUrls.push(url)\n                    }\n                });\n                this.setState({\n                    youTubeVideosUrl: videoUrls\n                })\n            });\n    }\n\n    render () {\n        const listVideos = this.state.youTubeVideosUrl.map((videoUrl) =>\n            <li key={videoUrl}>\n                <iframe width=\"560\" height=\"315\" src={videoUrl} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n            </li>\n        );\n\n        return (\n            <div className=\"container\">\n                <ScreenNav/>\n                <div>\n                    <h1 className=\"text-center\">Videos</h1>\n                    <ul>{listVideos}</ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Videos","import React, { Component } from 'react'\nimport { requireAuth } from '../../functions/AuthFunctions'\nimport './VideoChat.css'\nimport openSocket from 'socket.io-client';\n\nclass VideoChat extends Component {\n    constructor() {\n        super()\n        this.state = {\n            id: '',\n            nickname: '',\n            firstName: '',\n            lastName: '',\n            email: '',\n            io: openSocket('http://localhost:5050'),\n            // ws: new WebSocket(\"ws://localhost:5050\"),\n            connection: new RTCPeerConnection({\n                iceServers: [{ url: 'stun:stun2.1.google.com:19302' }]\n            }),\n            name: null,\n            otherUsername: null\n        }\n    }\n\n    componentDidMount () {\n        // get data of loggedin user\n        let auth = requireAuth();\n        // if user logged in stay on the page\n        if(auth.res === true) {\n            if(auth.user.type === 'user') {\n                this.setState({\n                    id: auth.user.id,\n                    firstName: auth.user.firstName,\n                    lastName: auth.user.lastName,\n                    email: auth.user.email\n                })\n            } else if(auth.user.type === 'clown') {\n                this.setState({\n                    id: auth.user.id,\n                    nickname: auth.user.nickname,\n                    firstName: auth.user.firstName,\n                    lastName: auth.user.lastName,\n                    email: auth.user.email\n                })\n            }\n        } else {\n            this.props.history.push(`/login`)\n        }\n\n        // Websockets\n\n        // this.state.io.emit('chat message', 'Connected to the signaling server');\n        // this.state.io.on('connection', function (socket) {\n        //     console.log('Connected to the signaling server')\n        // });\n        // var io = openSocket('http://localhost:5050');\n        // io.on('connection', function (data) {\n        //     console.log(data);\n        //     io.emit('my other event', { my: 'data' });\n        // });\n\n        var socket = openSocket('https://app-cliniclowns.herokuapp.com:5050');\n        socket.on('news', function (data) {\n            console.log(data);\n            socket.emit('my other event', { my: 'data' });\n        });\n\n        // this.state.ws.onopen = () => {\n        //     console.log('Connected to the signaling server')\n        // }\n          \n        // this.state.ws.onerror = err => {\n        //     console.error(err)\n        // }\n          \n        // this.state.ws.onmessage = msg => {\n        //     console.log('Got message', msg.data)\n          \n        //     const data = JSON.parse(msg.data)\n          \n        //     switch (data.type) {\n        //       case 'login':\n        //         handleLogin(data.success)\n        //         break\n        //       case 'offer':\n        //         handleOffer(data.offer, data.username)\n        //         break\n        //       case 'answer':\n        //         handleAnswer(data.answer)\n        //         break\n        //       case 'candidate':\n        //         handleCandidate(data.candidate)\n        //         break\n        //       case 'close':\n        //         handleClose()\n        //         break\n        //       default:\n        //         break\n        //     }\n        // }\n\n        // const sendMessage = message => {\n        //     if (this.state.otherUsername) {\n        //         message.otherUsername = this.state.otherUsername\n        //     }\n          \n        //     this.state.ws.send(JSON.stringify(message))\n        // }\n\n        // document.querySelector('div#call').style.display = 'none'\n\n        // document.querySelector('button#login').addEventListener('click', event => {\n        //     let username = document.querySelector('#username').value\n\n        //     if (username.length < 0) {\n        //         alert('Please enter a username 🙂')\n        //         return\n        //     }\n\n        //     sendMessage({\n        //         type: 'login',\n        //         username: auth.user.firstName\n        //     })\n        // })\n\n        // const handleLogin = async success => {\n        //     if (success === false) {\n        //         alert('😞 Username already taken')\n        //     } else {\n        //         document.querySelector('div#login').style.display = 'none'\n        //         document.querySelector('div#call').style.display = 'block'\n            \n        //         let localStream\n        //         try {\n        //             localStream = await navigator.mediaDevices.getUserMedia({\n        //                 video: { facingMode: \"user\" },\n        //                 audio: true\n        //             })\n        //         } catch (error) {\n        //             alert(`${error.name}`)\n        //             console.error(error)\n        //         }\n            \n        //         document.querySelector('video#local').srcObject = localStream\n            \n        //         this.state.connection.addStream(localStream)\n            \n        //         this.state.connection.onaddstream = event => {\n        //             document.querySelector('video#remote').srcObject = event.stream\n        //         }\n            \n        //         this.state.connection.onicecandidate = event => {\n        //             if (event.candidate) {\n        //             sendMessage({\n        //                 type: 'candidate',\n        //                 candidate: event.candidate\n        //             })\n        //             }\n        //         }\n        //     }\n        // }\n\n        // document.querySelector('button#call').addEventListener('click', () => {\n        //     const callToUsername = document.querySelector('input#username-to-call').value\n        \n        //     if (callToUsername.length === 0) {\n        //         alert('Enter a username 😉')\n        //         return\n        //     }\n            \n        //     this.setState({\n        //         otherUsername: callToUsername\n        //     })\n        \n        //     this.state.connection.createOffer(\n        //         offer => {\n        //             sendMessage({\n        //                 type: 'offer',\n        //                 offer: offer\n        //             })\n            \n        //             this.state.connection.setLocalDescription(offer)\n        //         },\n        //         error => {\n        //             alert('Error when creating an offer')\n        //             console.error(error)\n        //         }\n        //     )\n        // })\n\n        // const handleOffer = (offer, username) => {\n        //     this.setState({\n        //         otherUsername: username\n        //     })\n\n        //     this.state.connection.setRemoteDescription(new RTCSessionDescription(offer))\n        //     this.state.connection.createAnswer(\n        //         answer => {\n        //             this.state.connection.setLocalDescription(answer)\n        //             sendMessage({\n        //                 type: 'answer',\n        //                 answer: answer\n        //             })\n        //         },\n        //         error => {\n        //             alert('Error when creating an answer')\n        //             console.error(error)\n        //         }\n        //     )\n        // }\n        \n        // const handleAnswer = answer => {\n        //     this.state.connection.setRemoteDescription(new RTCSessionDescription(answer))\n        // }\n        \n        // const handleCandidate = candidate => {\n        //     this.state.connection.addIceCandidate(new RTCIceCandidate(candidate))\n        // }\n        \n        // document.querySelector('button#close-call').addEventListener('click', () => {\n        //         sendMessage({\n        //             type: 'close'\n        //         })\n        //         handleClose()\n        //     })\n            \n        // const handleClose = () => {\n        //     this.setState({\n        //         otherUsername: null\n        //     })\n        //     document.querySelector('video#remote').src = null\n        //     this.state.connection.close()\n        //     this.state.connection.onicecandidate = null\n        //     this.state.connection.onaddstream = null\n        // }\n\n\n    }\n\n    render () {\n        return (\n            <div>\n                <div id=\"login\">\n                    <label htmlFor=\"username\">Login</label>\n                    <input id=\"username\" placeholder=\"Login\" required=\"\" autoFocus=\"\" />\n                    <button id=\"login\">Login</button>\n                </div>\n\n                <div id=\"call\">\n                    <video id=\"local\" autoPlay></video>\n                    <video id=\"remote\" autoPlay></video>\n\n                    <div>\n                        <input id=\"username-to-call\" placeholder=\"Username to call\" />\n                        <button id=\"call\">Call</button>\n                        <button id=\"close-call\">Close call</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VideoChat","import React, { Component } from 'react'\nimport { getAllClowns } from '../../functions/Functions'\nimport ScreenNav from '../navigation/ScreenNav'\nimport './Clowns.css'\n\nclass Clowns extends Component {\n    constructor() {\n        super()\n        this.state = {\n            clowns: [],\n        }\n    }\n\n    componentDidMount() {\n        // get all clowns \n        getAllClowns().then(res => {\n            this.setState({\n                clowns: res.data\n            })\n        });\n    }   \n\n    render () {\n        const listClowns = this.state.clowns.map((clown) =>\n            <li key={clown.id}>\n                <img src={window.location.origin + clown.image} alt={\"foto \" + clown.nickname}></img>\n                <a href={\"clowns/\" + clown.id}>{clown.nickname}</a>\n            </li>\n        );\n\n        return (\n            <div className=\"container\">\n            <ScreenNav/>\n                <div>\n                    <h1 className=\"text-center\">Clowns</h1>\n                    <ul>{listClowns}</ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Clowns","import axios from 'axios'\n\nexport const getAllClowns = () => {\n    return axios.get('/clowns/all');\n}\n\nexport const getClown = (clownId) => {\n    return axios.get('/clowns/'+clownId);\n}","import React, { Component } from 'react'\nimport { getClown } from '../../functions/Functions'\nimport ScreenNav from '../navigation/ScreenNav'\nimport './SingleClown.css'\n\nclass Clowns extends Component {\n    constructor() {\n        super()\n        this.state = {\n            firstName: '',\n            lastName: '',\n            imageUrl: '',\n        }\n    }\n\n    componentDidMount() {\n        // get param from url query with -> this.props.match.params.id\n        getClown(this.props.match.params.id).then(res => {\n            this.setState({\n                firstName: res.data.firstName,\n                lastName: res.data.lastName,\n                imageUrl: '../src/logo.svg',\n            })\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <ScreenNav/>\n                <div>\n                    <h1 className=\"text-center\">{this.state.firstName} {this.state.lastName}</h1>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Clowns","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Home from './components/screens/Home'\nimport Login from './components/userRegistration/Login'\nimport ClownRegister from './components/clownRegistration/Register'\nimport ClownLogin from './components/clownRegistration/Login'\nimport Register from './components/userRegistration/Register'\nimport Profile from './components/screens/Profile'\nimport Videos from './components/screens/Videos'\nimport VideoChat from './components/screens/VideoChat'\nimport Clowns from './components/screens/Clowns'\nimport SingleClown from './components/screens/SingleClown'\n\nimport './reset.css'\nimport './main.css'\n\nclass App extends Component {\n  render () {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Home} />\n          <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/videos\" component={Videos} />\n            <Route exact path=\"/videochat\" component={VideoChat} />\n            <Route exact path=\"/clowns\" component={Clowns} />\n            <Route exact path=\"/clowns/:id\" component={SingleClown} />\n            <Route exact path=\"/clowns/login\" component={ClownLogin} />\n            <Route exact path=\"/clowns/register\" component={ClownRegister} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}